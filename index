<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Tu evento – Galería de recuerdos</title>
  <style>
    :root {
      --bg: #0f1115;      /* fondo oscuro elegante */
      --card: #171a21;    /* tarjetas */
      --muted: #aab2c0;   /* textos secundarios */
      --accent: #9dd7ff;  /* acento suave */
      --radius: 16px;
    }
    * { box-sizing: border-box; }
    body { margin: 0; font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, 'Helvetica Neue', Arial, sans-serif; color: #f5f7fb; background: radial-gradient(1200px 600px at 50% -10%, #2b313c 0, var(--bg) 55%); }

    header {
      padding: 28px 16px 12px; text-align: center;
    }
    header h1 { margin: 6px 0 2px; font-size: clamp(22px, 3.5vw, 34px); letter-spacing: 0.2px; }
    header p { margin: 0; color: var(--muted); font-size: 14px; }

    .container { max-width: 1100px; margin: 0 auto; padding: 12px 16px 40px; }

    .uploader { background: var(--card); border-radius: var(--radius); padding: 16px; display: grid; gap: 12px; box-shadow: 0 10px 30px rgba(0,0,0,.25); }
    .row { display: grid; gap: 12px; grid-template-columns: 1fr; }
    .row.cols { grid-template-columns: 1fr auto; align-items: center; }

    .dropzone { border: 2px dashed #3a4250; border-radius: 14px; padding: 18px; text-align: center; cursor: pointer; transition: .2s ease; background: #141823; }
    .dropzone:hover { border-color: var(--accent); }
    .dropzone.dragover { background: #111525; border-color: var(--accent); box-shadow: inset 0 0 0 1px rgba(157,215,255,.35); }
    .help { color: var(--muted); font-size: 13px; }

    .btn { background: linear-gradient(90deg,#3a7bd5,#00d2ff); color: #0b1220; border: 0; padding: 10px 14px; border-radius: 12px; font-weight: 700; cursor: pointer; }
    .btn:disabled { opacity: .6; cursor: not-allowed; }

    .previews { display: grid; grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); gap: 10px; }
    .preview { position: relative; background: #0e1220; border: 1px solid #22293a; border-radius: 12px; padding: 6px; }
    .preview img, .preview video { width: 100%; height: 100px; object-fit: cover; border-radius: 8px; display: block; }
    .bar { position: absolute; left: 6px; right: 6px; bottom: 6px; height: 6px; border-radius: 6px; background: #2a3142; overflow: hidden; }
    .bar > span { display: block; width: 0%; height: 100%; background: linear-gradient(90deg,#9dd7ff,#63ffa7); transition: width .2s; }

    .gallery { margin-top: 18px; display: grid; grid-template-columns: repeat(auto-fill, minmax(160px, 1fr)); gap: 12px; }
    .card { background: var(--card); border: 1px solid #22293a; border-radius: 16px; overflow: hidden; display: flex; flex-direction: column; }
    .thumb { aspect-ratio: 1 / 1; background: #0e1220; display: grid; place-items: center; }
    .thumb img, .thumb video { width: 100%; height: 100%; object-fit: cover; }
    .meta { padding: 10px; display: flex; justify-content: space-between; align-items: center; gap: 8px; }
    .name { font-size: 12px; color: #dfe6f7; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }
    .dl { font-size: 12px; color: #0b1220; background: #8be7c1; border-radius: 10px; padding: 6px 8px; font-weight: 700; text-decoration: none; }

    @media (min-width: 720px) {
      .row.cols { grid-template-columns: 1fr auto; }
    }
  </style>
</head>
<body>
  <header>
    <h1>Tu evento</h1>
    <p>Sube tus fotos y videos. Se verán aquí mismo y podrás descargarlos.</p>
  </header>

  <main class="container">
    <section class="uploader">
      <div class="row cols">
        <div class="dropzone" id="dropzone">
          <input id="fileInput" type="file" accept="image/*,video/*" multiple hidden>
          <div><strong>Toca o arrastra archivos aquí</strong></div>
          <div class="help">Formato: JPG, PNG, HEIC*, MP4, MOV, etc. (*iPhone convierte a JPG/PNG al subir)</div>
        </div>
        <button class="btn" id="uploadBtn" disabled>Subir archivos</button>
      </div>
      <div class="previews" id="previews"></div>
    </section>

    <section>
      <h3 style="margin:20px 6px 10px; color:#c8d3e6; font-size:16px">Galería</h3>
      <div class="gallery" id="gallery"></div>
    </section>
  </main>

  <script>
    const drop = document.getElementById('dropzone');
    const input = document.getElementById('fileInput');
    const btn = document.getElementById('uploadBtn');
    const previews = document.getElementById('previews');
    const gallery = document.getElementById('gallery');

    let queue = [];

    function bytesToBase64(arrBuf){
      let binary = '';
      const bytes = new Uint8Array(arrBuf);
      const len = bytes.byteLength;
      for (let i=0; i<len; i++) binary += String.fromCharCode(bytes[i]);
      return btoa(binary);
    }

    function addPreview(file){
      const wrap = document.createElement('div');
      wrap.className = 'preview';
      let media;
      if (file.type.startsWith('video/')) {
        media = document.createElement('video');
        media.src = URL.createObjectURL(file);
        media.muted = true; media.playsInline = true; media.autoplay = false; media.controls = false;
      } else {
        media = document.createElement('img');
        media.src = URL.createObjectURL(file);
        media.alt = file.name;
      }
      const bar = document.createElement('div'); bar.className = 'bar';
      const span = document.createElement('span'); bar.appendChild(span);
      wrap.appendChild(media); wrap.appendChild(bar);
      previews.appendChild(wrap);
      return span; // devolvemos la barrita de progreso
    }

    function onFilesSelected(list){
      Array.from(list).forEach(f => {
        if (!/^image\/.+|^video\/.+/.test(f.type)) return;
        const progressEl = addPreview(f);
        queue.push({ file: f, progressEl });
      });
      btn.disabled = queue.length === 0;
    }

    drop.addEventListener('click', () => input.click());
    input.addEventListener('change', e => onFilesSelected(e.target.files));

    drop.addEventListener('dragover', e => { e.preventDefault(); drop.classList.add('dragover'); });
    drop.addEventListener('dragleave', () => drop.classList.remove('dragover'));
    drop.addEventListener('drop', e => {
      e.preventDefault(); drop.classList.remove('dragover');
      onFilesSelected(e.dataTransfer.files);
    });

    async function uploadQueue(){
      btn.disabled = true;
      const payload = { files: [] };
      for (const item of queue){
        const buf = await item.file.arrayBuffer();
        payload.files.push({ name: item.file.name, mimeType: item.file.type, bytes: bytesToBase64(buf) });
      }
      // Llamada al servidor (Apps Script)
      google.script.run.withSuccessHandler(res => {
        // animar barras y limpiar
        queue.forEach(q => q.progressEl.style.width = '100%');
        queue = []; input.value = ''; setTimeout(() => { previews.innerHTML = ''; }, 600);
        if (res && res.ok) renderGallery(res.files, true);
      }).withFailureHandler(err => {
        alert('Error subiendo archivos: ' + err.message);
        btn.disabled = false;
      }).uploadFiles(payload);
    }

    btn.addEventListener('click', uploadQueue);

    function drivePreviewSrc(file){
      if (file.mimeType.startsWith('image/')) {
        // Vista rápida
        return `https://drive.google.com/uc?export=view&id=${file.id}`;
      } else if (file.mimeType.startsWith('video/')) {
        // Descarga/stream
        return `https://drive.google.com/uc?export=download&id=${file.id}`;
      } else {
        return file.thumbnailLink || `https://drive.google.com/uc?export=view&id=${file.id}`;
      }
    }

    function driveDownloadHref(file){
      // Enlace de descarga directa
      return `https://drive.google.com/uc?export=download&id=${file.id}`;
    }

    function renderGallery(files, prepend=false){
      const frag = document.createDocumentFragment();
      files.forEach(f => {
        const card = document.createElement('div');
        card.className = 'card';
        const thumb = document.createElement('div'); thumb.className = 'thumb';
        let media;
        if (f.mimeType.startsWith('video/')) {
          media = document.createElement('video');
          media.src = drivePreviewSrc(f); media.muted = true; media.playsInline = true; media.controls = true;
        } else {
          media = document.createElement('img');
          media.src = drivePreviewSrc(f); media.alt = f.name;
        }
        thumb.appendChild(media);
        const meta = document.createElement('div'); meta.className = 'meta';
        const name = document.createElement('div'); name.className = 'name'; name.textContent = f.name;
        const a = document.createElement('a'); a.className = 'dl'; a.href = driveDownloadHref(f); a.target = '_blank'; a.rel = 'noopener'; a.textContent = 'Descargar';
        meta.appendChild(name); meta.appendChild(a);
        card.appendChild(thumb); card.appendChild(meta);
        frag.appendChild(card);
      });
      if (prepend) {
        gallery.prepend(frag);
      } else {
        gallery.innerHTML = ''; gallery.appendChild(frag);
      }
    }

    function loadGallery(){
      google.script.run.withSuccessHandler(res => {
        if (res && res.ok) renderGallery(res.files);
      }).withFailureHandler(err => {
        console.error(err);
      }).listFiles();
    }

    // Cargar la galería al abrir
    loadGallery();
  </script>
</body>
</html>
